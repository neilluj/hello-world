from snowflake.snowpark import functions as F
from snowflake.snowpark.window import Window

def operaciones_periodo(
    df,
    col_usuario: str,
    col_operacion: str,
    col_fecha: str,
    modo: str = "m",
    formato_fecha: str = "YYYY-MM-DD HH24:MI:SS"
):
    """
    DF a nivel ID_USUARIO, ID_OPERACION y PERIODO (último día del mes o semana)
    con el número de días con operaciones en los tres periodos anteriores.
    
    col_fecha puede contener timestamp en formato varchar.
    """
    
    # 1️⃣ Convertir VARCHAR a TIMESTAMP y luego a DATE
    df = df.with_column(
        "FECHA_CONVERTIDA",
        F.to_date(F.to_timestamp(F.col(col_fecha), formato_fecha))
    )
    
    # 2️⃣ Último día del mes o semana
    if modo == "m":
        df = df.with_column("PERIODO", F.last_day(F.col("FECHA_CONVERTIDA"), "month"))
        unidad = "month"
        sufijo = "MES"
    elif modo == "s":
        df = df.with_column("PERIODO", F.dateadd("day", 6, F.date_trunc("week", F.col("FECHA_CONVERTIDA"))))
        unidad = "week"
        sufijo = "SEMANA"
    else:
        raise ValueError("modo debe ser 'm' o 's'")
    
    # 3️⃣ Contar días distintos por usuario y periodo
    df_dias = (
        df.group_by(col_usuario, "PERIODO")
          .agg(F.count_distinct(F.col("FECHA_CONVERTIDA")).alias("DIAS_OPERACION"))
    )
    
    # 4️⃣ Window para 3 periodos anteriores
    w = Window.partition_by(col_usuario).order_by(F.col("PERIODO"))
    
    df_dias = (
        df_dias
        .with_column(f"DIAS_HACE_1_{sufijo}", F.lag("DIAS_OPERACION", 1).over(w))
        .with_column(f"DIAS_HACE_2_{sufijo}", F.lag("DIAS_OPERACION", 2).over(w))
        .with_column(f"DIAS_HACE_3_{sufijo}", F.lag("DIAS_OPERACION", 3).over(w))
    )
    
    # 5️⃣ Unir con tabla original para incluir ID_OPERACION
    result = df.join(
        df_dias,
        on=[col_usuario, "PERIODO"],
        how="left"
    ).select(
        col_usuario,
        col_operacion,
        "PERIODO",
        f"DIAS_HACE_1_{sufijo}",
        f"DIAS_HACE_2_{sufijo}",
        f"DIAS_HACE_3_{sufijo}"
    )
    
    return result