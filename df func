from snowflake.snowpark import functions as F
from snowflake.snowpark.window import Window

def operaciones_periodo(
    df,
    col_usuario: str,
    col_operacion: str,
    col_fecha: str,
    modo: str = "m"
):
    """
    Devuelve un DF a nivel ID_USUARIO, ID_OPERACION y PERIODO (último día del mes o semana)
    con el número de días con operaciones en los tres periodos anteriores.

    df: DataFrame original
    col_usuario: nombre de la columna con ID de usuario
    col_operacion: nombre de la columna con ID de operación
    col_fecha: nombre de la columna con fecha de operación
    modo: 'm' para mensual, 's' para semanal
    """
    
    # 1️⃣ Crear columna PERIODO (último día del mes o semana)
    if modo == "m":
        df = df.with_column("PERIODO", F.last_day(F.col(col_fecha), "month"))
        unidad = "month"
        sufijo = "MES"
    elif modo == "s":
        df = df.with_column("PERIODO", F.dateadd("day", 6, F.date_trunc("week", F.col(col_fecha))))
        unidad = "week"
        sufijo = "SEMANA"
    else:
        raise ValueError("modo debe ser 'm' o 's'")
    
    # 2️⃣ Contar días distintos con operación por usuario y periodo
    df_dias = (
        df.group_by(col_usuario, "PERIODO")
          .agg(F.count_distinct(F.col(col_fecha)).alias("DIAS_OPERACION"))
    )
    
    # 3️⃣ Crear ventana para calcular los 3 periodos anteriores
    w = Window.partition_by(col_usuario).order_by(F.col("PERIODO"))
    
    df_dias = (
        df_dias
        .with_column(f"DIAS_HACE_1_{sufijo}", F.lag("DIAS_OPERACION", 1).over(w))
        .with_column(f"DIAS_HACE_2_{sufijo}", F.lag("DIAS_OPERACION", 2).over(w))
        .with_column(f"DIAS_HACE_3_{sufijo}", F.lag("DIAS_OPERACION", 3).over(w))
    )
    
    # 4️⃣ Unir con la tabla original para incluir ID_OPERACION
    result = df.join(
        df_dias,
        on=[col_usuario, "PERIODO"],
        how="left"
    ).select(
        col_usuario,
        col_operacion,
        "PERIODO",
        f"DIAS_HACE_1_{sufijo}",
        f"DIAS_HACE_2_{sufijo}",
        f"DIAS_HACE_3_{sufijo}"
    )
    
    return result


result = operaciones_periodo(
    df=df,
    col_usuario="ID_USUARIO",
    col_operacion="ID_OPERACION",
    col_fecha="FECHA_OPERACION",
    modo="m"
)

result.show()